javax.validation.constraints.AssertFalse.message     = deve ser falso
javax.validation.constraints.AssertTrue.message      = deve ser verdadeiro
javax.validation.constraints.DecimalMax.message      = deve ser menor que ${inclusive == true ? 'ou igual a ' : ''}{value}
javax.validation.constraints.DecimalMin.message      = deve ser maior que ${inclusive == true ? 'ou igual a ' : ''}{value}
javax.validation.constraints.Digits.message          = valor n\u00famerico fora do limite (<{inteiro} d\u00edgito>.<{fra\u00e7\u00e3o} d\u00edgitos> esperar)
javax.validation.constraints.Email.message           = deve ser um endere\u00e7o de e-mail bem formado
javax.validation.constraints.Future.message          = deve ser uma data futura
javax.validation.constraints.FutureOrPresent.message = deve ser uma data no presente ou no futuro
javax.validation.constraints.Max.message             = Campo "{0}" deve ser menor que ou igual \u00e0 {value}
javax.validation.constraints.Min.message             = Campo "{0}" deve ser maior que ou igual \u00e0 {value}
javax.validation.constraints.Negative.message        = deve ser menor que 0
javax.validation.constraints.NegativeOrZero.message  = deve ser menor ou igual a 0
javax.validation.constraints.NotBlank.message        = Campo "{0}" n\u00e3o deve estar em branco
javax.validation.constraints.NotEmpty.message        = Campo "{0}" n\u00e3o pode ficar vazio
javax.validation.constraints.NotNull.message         = Campo "{0}" n\u00e3o pode ser nulo
javax.validation.constraints.Null.message            = deve ser nulo
javax.validation.constraints.Past.message            = deve ser uma data passada
javax.validation.constraints.PastOrPresent.message   = deve ser uma data no passado ou no presente
javax.validation.constraints.Pattern.message         = O campo "{0}" deve corresponder ao padr\u00e3o estabelecido
javax.validation.constraints.Positive.message        = deve ser maior que 0
javax.validation.constraints.PositiveOrZero.message  = deve ser maior ou igual a 0
javax.validation.constraints.Size.message            = "{0}" deve conter entre {min} e {max} caracteres

org.hibernate.validator.constraints.CreditCardNumber.message        = n\u00famero do cart\u00e3o de cr\u00e9dito inv\u00e1lido
org.hibernate.validator.constraints.Currency.message                = moeda inv\u00e1lida (deve ser uma de {valor})
org.hibernate.validator.constraints.EAN.message                     = c\u00f3digo de barras {tipo} inv\u00e1lido
org.hibernate.validator.constraints.Email.message                   = "{0}" deve ser um endere\u00e7o válido. Ex.: empresa@dominio.com.br
org.hibernate.validator.constraints.ISBN.message                    = ISBN inv\u00e1lido
org.hibernate.validator.constraints.Length.message                  = o comprimento deve ser entre {m\u00edn} e {m\u00e1x}
org.hibernate.validator.constraints.CodePointLength.message         = o comprimento deve ser entre {m\u00edn} e {m\u00e1x}
org.hibernate.validator.constraints.LuhnCheck.message               = o d\u00edgito de verifica\u00e7\u00e3o para ${validatedValue} \u00e9 inv\u00e1lido, soma de verifica\u00e7\u00e3o Luhn Modulo 10 com falha
org.hibernate.validator.constraints.Mod10Check.message              = o d\u00edgito de verifica\u00e7\u00e3o para ${validatedValue} \u00e9 inv\u00e1lido, soma de verifica\u00e7\u00e3o Modulo 10 com falha
org.hibernate.validator.constraints.Mod11Check.message              = o d\u00edgito de verifica\u00e7\u00e3o para ${validatedValue} \u00e9 inv\u00e1lido, soma de verifica\u00e7\u00e3o Modulo 11 com falha
org.hibernate.validator.constraints.ModCheck.message                = o d\u00edgito de verifica\u00e7\u00e3o para ${validatedValue} \u00e9 inv\u00e1lido, soma de verifica\u00e7\u00e3o ${modType} com falha
org.hibernate.validator.constraints.NotBlank.message                = Campo "{0}" n\u00e3o deve estar em branco
org.hibernate.validator.constraints.NotEmpty.message                = Campo "{0}" n\u00e3o deve estar vazio
org.hibernate.validator.constraints.ParametersScriptAssert.message  = express\u00e3o de script "{script}" n\u00e3o avaliou para true
org.hibernate.validator.constraints.Range.message                   = deve estar entre {m\u00edn} e {m\u00e1x}
org.hibernate.validator.constraints.SafeHtml.message                = pode ter conte\u00fado HTML n\u00e3o seguro
org.hibernate.validator.constraints.ScriptAssert.message            = express\u00e3o de script "{script}" n\u00e3o avaliou para true
org.hibernate.validator.constraints.UniqueElements.message          = deve conter apenas elementos exclusivos
org.hibernate.validator.constraints.URL.message                     = deve ser uma URL v\u00e1lida

org.hibernate.validator.constraints.br.CNPJ.message                 = n\u00famero do registro de contribuinte corporativo brasileiro (CNPJ) inv\u00e1lido
org.hibernate.validator.constraints.br.CPF.message                  = n\u00famero do registro de contribuinte individual brasileiro (CPF) inv\u00e1lido
org.hibernate.validator.constraints.br.TituloEleitoral.message      = n\u00famero do t\u00edtulo de eleitor brasileiro inv\u00e1lido
org.hibernate.validator.constraints.pl.REGON.message                = n\u00famero de identifica\u00e7\u00e3o de contribuinte polon\u00eas (REGON) inv\u00e1lido
org.hibernate.validator.constraints.pl.NIP.message                  = n\u00famero de identifica\u00e7\u00e3o de VAT (NIP) inv\u00e1lido
org.hibernate.validator.constraints.pl.PESEL.message                = n\u00famero de identifica\u00e7\u00e3o nacional polonesa (PESEL) inv\u00e1lido
org.hibernate.validator.constraints.time.DurationMax.message        = deve ser menor que${inclusive == true ? ' ou igual a' : ''}${dias == 0 ? '' : dias == 1 ? ' 1 dia' : ' ' += dias += ' dias'}${horas == 0 ? '' : horas == 1 ? ' 1 hora' : ' ' += horas += ' horas'}${minutos == 0 ? '' : minutos == 1 ? ' 1 minuto' : ' ' += minutos += ' minutos'}${segundos == 0 ? '' : segundos == 1 ? ' 1 segundo' : ' ' += segundos += ' segundos'}${miliss == 0 ? '' : miliss == 1 ? ' 1 mili' : ' ' += miliss += ' miliss'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}
org.hibernate.validator.constraints.time.DurationMin.message        = deve ser maior que${inclusive == true ? ' ou igual a' : ''}${dias == 0 ? '' : dias == 1 ? ' 1 dia' : ' ' += dias += ' dias'}${horas == 0 ? '' : horas == 1 ? ' 1 hora' : ' ' += horas += ' horas'}${minutos == 0 ? '' : minutos == 1 ? ' 1 minuto' : ' ' += minutos += ' minutos'}${segundos == 0 ? '' : segundos == 1 ? ' 1 segundo' : ' ' += segundos += ' segundos'}${miliss == 0 ? '' : miliss == 1 ? ' 1 mili' : ' ' += miliss += ' miliss'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' nanos'}

typeMismatch="{0}" apresenta formato inv\u00e1lido
methodInvocation="{0}" apresenta formato inv\u00e1lido
typeMismatch.command.goal=invalid goal1
typeMismatch.goal=invalid goal2
typeMismatch.java.lang.Integer="{0}" não pode ser convertido
typeMismatch="{0}" apresenta formato inv\u00e1lido

###########################VALIDAÇÃO DE LOGIN#######################
#AbstractUserDetailsAuthenticationProvider.badCredentials = Credenciais erradas
AbstractUserDetailsAuthenticationProvider.badCredentials =Nome de Usu\u00e1rio ou senha inv\u00e1lidos
AbstractUserDetailsAuthenticationProvider.locked=Usu\u00e1rio bloqueado
AbstractUserDetailsAuthenticationProvider.disabled=Usu\u00e1rio desabilitado
AbstractUserDetailsAuthenticationProvider.expired=Usu\u00e1rio expirado
AbstractUserDetailsAuthenticationProvider.credentialsExpired=Credenciais expiradas

####################################################################
validacao.data_em_conflito=As datas fornecidas est\u00e3o em conflito
validacao.dependencias=Erro: Item selecionado para opera\u00e7\u00e3o apresenta depend\u00eancias
validacao.iteminexistente=Item {0} n\u00e3o existe ou foi exclu\u00eddo no banco de dados 
validacao.fieldisneeded={0} deve ser informado
validacao.duplicated=Valor "{0}" j\u00e1 existe
##########################Validação de captcha############################
validacao.captcha.invalid=Captcha inv\u00e1lido
validacao.captcha.invalid.args=Captcha inv\u00e1lido. ({0})
######################Validação equipamentos de rede################
validacao.ipaddress.notReachable=IP "{0}" n\u00e3o alcan\u00e7ado
validacao.ipaddress.tipo=Voc\u00ea precisa fornecer um tipo v\u00e1lido para o ip {0} da interface {1}
validacao.ipaddress.valor=IP "{0}" n\u00e3o \u00e9 v\u00e1lido para o tipo correspondente
validacao.ipaddress.valornotempty=IP "{0}" da interface {1} deve ser fornecido corretamente
validacao.hostname.notReachable=Hostname "{0}" n\u00e3o alcan\u00e7ado
validacao.macaddress.valor= Valor {0} inv\u00e1lido para a interface de rede "{1}" 
validacao.macaddress.iplistempty= Lista de Ips da interface {0} n\u00e3o pode ficar vazia. Forne\u00e7a pelo menos um Ip v\u00e1lido





